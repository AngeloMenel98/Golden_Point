version: "3.7"

services:
  db:
    image: postgres:15.2-alpine3.17
    container_name: db_app
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - sql-data:/var/lib/postgresql/data
    networks:
      - common-net
    #secrets:
    #  - db_username
    #  - db_password

  backend:
    build:
      context: ./service-backend
      dockerfile: ./Dockerfile/Dockerfile
    image: angemenel98/gp-backend:0.0.5
    container_name: backend_app
    ports:
      - "8080:8080"
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      PORT: 8080
      DB_NAME: ${DB_NAME}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
    networks:
      - common-net
    #secrets:
    #  - db_username
    #  - db_password

  frontend:
    build:
      context: ./service-frontend
      dockerfile: ./Dockerfile
    image: angemenel98/gp-frontend:0.0.5
    container_name: frontend_app
    depends_on:
      - backend
    environment:
      BASE_URL: ${BASE_URL}
      PORT: ${PORT}
    ports:
      - "3000:3000"

volumes:
  sql-data:

networks:
  common-net: {}
#secrets:
#  db_username:
#    file: ./secrets/db_username.txt
#  db_password:
#    file: ./secrets/db_password.txt
